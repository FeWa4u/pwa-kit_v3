diff --git a/packages/pwa-kit-dev/src/configs/webpack/config.js b/packages/pwa-kit-dev/src/configs/webpack/config.js
index 023d861b..8fcc6570 100644
--- a/packages/pwa-kit-dev/src/configs/webpack/config.js
+++ b/packages/pwa-kit-dev/src/configs/webpack/config.js
@@ -75,7 +75,6 @@ const getAppEntryPoint = (pkg) => {
 
 const findInProjectThenSDK = (pkg) => {
     const projectPath = resolve(projectDir, 'node_modules', pkg)
-    console.log('~projectPath', projectPath)
     return fs.existsSync(projectPath) ? projectPath : resolve(sdkDir, 'node_modules', pkg)
 }
 
diff --git a/packages/pwa-kit-dev/src/configs/webpack/plugins.js b/packages/pwa-kit-dev/src/configs/webpack/plugins.js
index e8ae6734..51f43c1c 100644
--- a/packages/pwa-kit-dev/src/configs/webpack/plugins.js
+++ b/packages/pwa-kit-dev/src/configs/webpack/plugins.js
@@ -12,8 +12,6 @@ import fs from 'fs'
 const projectDir = process.cwd()
 const pkg = require(resolve(projectDir, 'package.json'))
 
-console.log('~testing!!!')
-
 /**
  * Allows users to override special SDK components by placing override
  * files in certain magic locations in a project.
@@ -29,34 +27,9 @@ export const createModuleReplacementPlugin = (projectDir) => {
         }
         return new RegExp(str)
     }
-    console.log('~pkg', pkg)
-    console.log('~pkg?.mobify', pkg?.mobify)
-    console.log('~pkg?.mobify?.extends', pkg?.mobify?.extends)
 
     const extendPath = pkg?.mobify?.extends ? `node_modules/${pkg?.mobify?.extends}` : ''
 
-    console.log(
-        `~LEGACY example 'path'`,
-        makeRegExp('pwa-kit-react-sdk(/dist)?/ssr/universal/components/_app-config$')
-    )
-    console.log(
-        `~LEGACY example 'newPath'`,
-        resolve(projectDir, 'app', 'components', '_app-config', 'index')
-    )
-
-    // const getOverridePath = (path) => {
-    //     const arr = []
-    //     // order matters here, we perform look ups starting with the first
-    //     // override alias, falling back to the default if none are found
-    //     if (pkg?.mobify?.extends && pkg?.mobify?.overridesDir) {
-    //         const first = resolve(projectDir, pkg?.mobify?.overridesDir, ...path)
-    //         if (first) return first
-    //         const second = resolve(projectDir, extendPath, ...path)
-    //         if (second) return second
-    //     }
-    //     return resolve(projectDir, extendPath, ...path)
-    // }
-
     // @TODO: this was working, but doesn't account for the full cascade / fallback
     const overridables = [
         {
@@ -81,53 +54,14 @@ export const createModuleReplacementPlugin = (projectDir) => {
         {
             path: makeRegExp('pwa-kit-react-sdk(/dist)?/ssr/universal/routes$'),
             // newPath: resolve(projectDir, 'app', 'routes')
-            newPath: resolve(projectDir, extendPath, 'app', 'routes')
+            // newPath: resolve(projectDir, extendPath, 'app', 'routes')
+            newPath: fs.existsSync('/Users/bchypak/Projects/pwa-kit/packages/spike-extendend-retail-app/pwa-kit/overrides/app/routes.jsx') ? 
+                resolve(projectDir, 'pwa-kit', 'overrides', 'app', 'routes') : 
+                resolve(projectDir, extendPath, 'app', 'routes')
         }
     ]
 
-    // @TODO: make this work
-    // const overridables = [
-    //     {
-    //         path: makeRegExp('pwa-kit-react-sdk(/dist)?/ssr/universal/components/_app-config$'),
-    //         // newPath: resolve(projectDir, 'app', 'components', '_app-config', 'index'),
-    //         newPath: getOverridePath(['app', 'components', '_app-config', 'index'])
-
-    //         // @TODO: finish the pattern above for the below so that fallback
-    //         // happens either at the overrides dir or the extends dir, but if
-    //         // both are absent, look up in projectDir... new function to generate the arrays?
-    //     },
-    //     {
-    //         path: makeRegExp('pwa-kit-react-sdk(/dist)?/ssr/universal/components/_document$'),
-    //         newPath: getOverridePath(['app', 'components', '_document', 'index'])
-    //     },
-    //     {
-    //         path: makeRegExp('pwa-kit-react-sdk(/dist)?/ssr/universal/components/_app$'),
-    //         // newPath: resolve(projectDir, 'app', 'components', '_app', 'index'),
-    //         newPath: getOverridePath(['app', 'components', '_app', 'index'])
-    //     },
-    //     {
-    //         path: makeRegExp('pwa-kit-react-sdk(/dist)?/ssr/universal/components/_error$'),
-    //         // newPath: resolve(projectDir, 'app', 'components', '_error', 'index'),
-    //         newPath: getOverridePath(['app', 'components', '_error', 'index'])
-    //     },
-    //     {
-    //         path: makeRegExp('pwa-kit-react-sdk(/dist)?/ssr/universal/routes$'),
-    //         // newPath: resolve(projectDir, 'app', 'routes')
-    //         newPath: getOverridePath(['app', 'routes'])
-    //     }
-    // ]
-
     if (pkg?.mobify?.extends && pkg?.mobify?.overridesDir) {
-        console.log('~got to 66')
-        console.log(`~projectDir`, projectDir)
-        console.log(
-            `~resolve(projectDir, pkg?.mobify?.overridesDir, 'app')`,
-            resolve(projectDir, pkg?.mobify?.overridesDir, 'app')
-        )
-        console.log(
-            `~resolve(projectDir, extendPath, pkg?.mobify?.overridesDir, 'app')`,
-            resolve(projectDir, extendPath, pkg?.mobify?.overridesDir, 'app')
-        )
         overridables.push({
             // path: makeRegExp('app$'),
             // @TODO: this should alias by npm package name (`retail-react-app`)
@@ -141,8 +75,6 @@ export const createModuleReplacementPlugin = (projectDir) => {
 
     const replacements = []
     overridables.forEach(({path, newPath}) => {
-        console.log('~path', path)
-        console.log('~newPath', newPath)
         extensions.forEach((ext) => {
             const replacement = newPath + ext
             if (fs.existsSync(replacement)) {
@@ -161,22 +93,9 @@ export const createModuleReplacementPlugin = (projectDir) => {
         })
     })
 
-    console.log('~replacements', replacements)
-
     return new webpack.NormalModuleReplacementPlugin(/.*/, (resource) => {
-        if (
-            resource?.contextInfo?.issuer?.match(
-                /spike\-extendend\-retail\-app\/pwa-kit\/overrides/
-            )
-        ) {
-            console.log('~resource req path via overrides', resource?.contextInfo?.issuer)
-        }
-
-        if (resource?.contextInfo?.issuer?.match(/retail\-react\-app\/\-app/)) {
-            console.log('~resource req path via retail-react-app', resource?.contextInfo?.issuer)
-        }
         const resolved = path.resolve(resource.context, resource.request)
-
+        
         const replacement = replacements.find(({path}) => resolved.match(path))
 
         const sdkPaths = [
diff --git a/packages/spike-extendend-retail-app/build/loadable-stats.json b/packages/spike-extendend-retail-app/build/loadable-stats.json
index e52565d1..781bcf91 100644
--- a/packages/spike-extendend-retail-app/build/loadable-stats.json
+++ b/packages/spike-extendend-retail-app/build/loadable-stats.json
@@ -1,8 +1,8 @@
 {
   "name": "client",
-  "hash": "48e263f4894a4df1288c",
+  "hash": "727fe09345de2164087d",
   "publicPath": "/mobify/bundle/development/",
-  "outputPath": "/Users/bfeister/dev/pwa-kit/packages/spike-extendend-retail-app/build",
+  "outputPath": "/Users/bchypak/Projects/pwa-kit/packages/spike-extendend-retail-app/build",
   "assetsByChunkName": {
     "main": [
       "main.js"
diff --git a/packages/spike-extendend-retail-app/pwa-kit/overrides/app/pages/home/index.jsx b/packages/spike-extendend-retail-app/pwa-kit/overrides/app/pages/home/index.jsx
index 86aefaf1..36c94729 100644
--- a/packages/spike-extendend-retail-app/pwa-kit/overrides/app/pages/home/index.jsx
+++ b/packages/spike-extendend-retail-app/pwa-kit/overrides/app/pages/home/index.jsx
@@ -5,44 +5,7 @@
  * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
  */
 
-import React, {useEffect} from 'react'
-import PropTypes from 'prop-types'
-import {useIntl, FormattedMessage} from 'react-intl'
-import {useLocation} from 'react-router-dom'
-
-// Components
-import {
-    Box,
-    Button,
-    SimpleGrid,
-    HStack,
-    VStack,
-    Text,
-    Flex,
-    Stack,
-    Container,
-    Link,
-} from '@chakra-ui/react'
-
-// Project Components
-import Hero from 'retail-react-app/app/components/hero'
-import Seo from 'retail-react-app/app/components/seo'
-import Section from 'retail-react-app/app/components/section'
-import ProductScroller from 'retail-react-app/app/components/product-scroller'
-
-// Others
-import {getAssetUrl} from 'pwa-kit-react-sdk/ssr/universal/utils'
-import {heroFeatures, features} from './data'
-
-//Hooks
-import useEinstein from '../../commerce-api/hooks/useEinstein'
-
-// Constants
-import {
-    MAX_CACHE_AGE,
-    HOME_SHOP_PRODUCTS_CATEGORY_ID,
-    HOME_SHOP_PRODUCTS_LIMIT,
-} from '../../constants'
+import React from 'react'
 
 /**
  * This is the home page for Retail React App.
@@ -50,268 +13,13 @@ import {
  * The page renders SEO metadata and a few promotion
  * categories and products, data is from local file.
  */
-const Home = ({productSearchResult, isLoading}) => {
-    const intl = useIntl()
-    const einstein = useEinstein()
-    const {pathname} = useLocation()
-
-    /**************** Einstein ****************/
-    useEffect(() => {
-        einstein.sendViewPage(pathname)
-    }, [])
-
-    return (
-        <Box data-testid="home-page" layerStyle="page">
-            <Seo
-                title="Home Page"
-                description="Commerce Cloud Retail React App"
-                keywords="Commerce Cloud, Retail React App, React Storefront"
-            />
-
-            <Hero
-                // @TODO: translations not working?
-                title={'Hello Upgradeable! React Store 🎉'}
-                img={{
-                    src: getAssetUrl('static/img/hero.png'),
-                    alt: 'npx pwa-kit-create-app',
-                }}
-                actions={
-                    <Stack spacing={{base: 4, sm: 6}} direction={{base: 'column', sm: 'row'}}>
-                        <Button
-                            as={Link}
-                            href="https://developer.salesforce.com/docs/commerce/pwa-kit-managed-runtime/guide/getting-started.html"
-                            target="_blank"
-                            width={{base: 'full', md: 'inherit'}}
-                            paddingX={7}
-                            _hover={{textDecoration: 'none'}}
-                        >
-                            <FormattedMessage
-                                defaultMessage="Get started"
-                                id="home.link.get_started"
-                            />
-                        </Button>
-                    </Stack>
-                }
-            />
-
-            <Section
-                background={'gray.50'}
-                marginX="auto"
-                paddingY={{base: 8, md: 16}}
-                paddingX={{base: 4, md: 8}}
-                borderRadius="base"
-                width={{base: '100vw', md: 'inherit'}}
-                position={{base: 'relative', md: 'inherit'}}
-                left={{base: '50%', md: 'inherit'}}
-                right={{base: '50%', md: 'inherit'}}
-                marginLeft={{base: '-50vw', md: 'auto'}}
-                marginRight={{base: '-50vw', md: 'auto'}}
-            >
-                <SimpleGrid
-                    columns={{base: 1, md: 1, lg: 3}}
-                    spacingX={{base: 1, md: 4}}
-                    spacingY={{base: 4, md: 14}}
-                >
-                    {heroFeatures.map((feature, index) => {
-                        const featureMessage = feature.message
-                        return (
-                            <Box
-                                key={index}
-                                background={'white'}
-                                boxShadow={'0px 2px 2px rgba(0, 0, 0, 0.1)'}
-                                borderRadius={'4px'}
-                            >
-                                <Link target="_blank" href={feature.href}>
-                                    <HStack>
-                                        <Flex
-                                            paddingLeft={6}
-                                            height={24}
-                                            align={'center'}
-                                            justify={'center'}
-                                        >
-                                            {feature.icon}
-                                        </Flex>
-                                        <Text fontWeight="700">
-                                            {intl.formatMessage(featureMessage.title)}
-                                        </Text>
-                                    </HStack>
-                                </Link>
-                            </Box>
-                        )
-                    })}
-                </SimpleGrid>
-            </Section>
-
-            {productSearchResult && (
-                <Section
-                    padding={4}
-                    paddingTop={16}
-                    title={intl.formatMessage({
-                        defaultMessage: 'Shop Products',
-                        id: 'home.heading.shop_products',
-                    })}
-                    subtitle={intl.formatMessage(
-                        {
-                            defaultMessage:
-                                'This section contains content from the catalog. {docLink} on how to replace it.',
-                            id: 'home.description.shop_products',
-                            description:
-                                '{docLink} is a html button that links the user to https://sfdc.co/business-manager-manage-catalogs',
-                        },
-                        {
-                            docLink: (
-                                <Link
-                                    target="_blank"
-                                    href={'https://sfdc.co/business-manager-manage-catalogs'}
-                                    textDecoration={'none'}
-                                    position={'relative'}
-                                    _after={{
-                                        position: 'absolute',
-                                        content: `""`,
-                                        height: '2px',
-                                        bottom: '-2px',
-                                        margin: '0 auto',
-                                        left: 0,
-                                        right: 0,
-                                        background: 'gray.700',
-                                    }}
-                                    _hover={{textDecoration: 'none'}}
-                                >
-                                    {intl.formatMessage({
-                                        defaultMessage: 'Read docs',
-                                        id: 'home.link.read_docs',
-                                    })}
-                                </Link>
-                            ),
-                        }
-                    )}
-                >
-                    <Stack pt={8} spacing={16}>
-                        <ProductScroller
-                            products={productSearchResult?.hits}
-                            isLoading={isLoading}
-                        />
-                    </Stack>
-                </Section>
-            )}
-
-            <Section
-                padding={4}
-                paddingTop={32}
-                title={intl.formatMessage({
-                    defaultMessage: 'Features',
-                    id: 'home.heading.features',
-                })}
-                subtitle={intl.formatMessage({
-                    defaultMessage:
-                        'Out-of-the-box features so that you focus only on adding enhancements.',
-                    id: 'home.description.features',
-                })}
-            >
-                <Container maxW={'6xl'} marginTop={10}>
-                    <SimpleGrid columns={{base: 1, md: 2, lg: 3}} spacing={10}>
-                        {features.map((feature, index) => {
-                            const featureMessage = feature.message
-                            return (
-                                <HStack key={index} align={'top'}>
-                                    <VStack align={'start'}>
-                                        <Flex
-                                            width={16}
-                                            height={16}
-                                            align={'center'}
-                                            justify={'left'}
-                                            color={'gray.900'}
-                                            paddingX={2}
-                                        >
-                                            {feature.icon}
-                                        </Flex>
-                                        <Text color={'black'} fontWeight={700} fontSize={20}>
-                                            {intl.formatMessage(featureMessage.title)}
-                                        </Text>
-                                        <Text color={'black'}>
-                                            {intl.formatMessage(featureMessage.text)}
-                                        </Text>
-                                    </VStack>
-                                </HStack>
-                            )
-                        })}
-                    </SimpleGrid>
-                </Container>
-            </Section>
-
-            <Section
-                padding={4}
-                paddingTop={32}
-                title={intl.formatMessage({
-                    defaultMessage: "We're here to help",
-                    id: 'home.heading.here_to_help',
-                })}
-                subtitle={
-                    <>
-                        <>
-                            {intl.formatMessage({
-                                defaultMessage: 'Contact our support staff.',
-                                id: 'home.description.here_to_help',
-                            })}
-                        </>
-                        <br />
-                        <>
-                            {intl.formatMessage({
-                                defaultMessage: 'They will get you to the right place.',
-                                id: 'home.description.here_to_help_line_2',
-                            })}
-                        </>
-                    </>
-                }
-                actions={
-                    <Button
-                        as={Link}
-                        href="https://help.salesforce.com/s/?language=en_US"
-                        target="_blank"
-                        width={'auto'}
-                        paddingX={7}
-                        _hover={{textDecoration: 'none'}}
-                    >
-                        <FormattedMessage defaultMessage="Contact Us" id="home.link.contact_us" />
-                    </Button>
-                }
-                maxWidth={'xl'}
-            />
-        </Box>
-    )
+const Home = () => {
+    return <div>This is my new home</div>
 }
 
 Home.getTemplateName = () => 'home'
 
-Home.shouldGetProps = ({previousLocation, location}) =>
-    !previousLocation || previousLocation.pathname !== location.pathname
-
-Home.getProps = async ({res, api}) => {
-    if (res) {
-        res.set('Cache-Control', `max-age=${MAX_CACHE_AGE}`)
-    }
 
-    const productSearchResult = await api.shopperSearch.productSearch({
-        parameters: {
-            refine: [`cgid=${HOME_SHOP_PRODUCTS_CATEGORY_ID}`, 'htype=master'],
-            limit: HOME_SHOP_PRODUCTS_LIMIT,
-        },
-    })
-
-    return {productSearchResult}
-}
-
-Home.propTypes = {
-    /**
-     * The search result object showing all the product hits, that belong
-     * in the supplied category.
-     */
-    productSearchResult: PropTypes.object,
-    /**
-     * The current state of `getProps` when running this value is `true`, otherwise it's
-     * `false`. (Provided internally)
-     */
-    isLoading: PropTypes.bool,
-}
+Home.propTypes = {}
 
 export default Home
diff --git a/packages/spike-extendend-retail-app/pwa-kit/overrides/app/routes.tsx b/packages/spike-extendend-retail-app/pwa-kit/overrides/app/routes.tsx
deleted file mode 100644
index c0eff0f4..00000000
--- a/packages/spike-extendend-retail-app/pwa-kit/overrides/app/routes.tsx
+++ /dev/null
@@ -1,112 +0,0 @@
-/*
- * Copyright (c) 2021, salesforce.com, inc.
- * All rights reserved.
- * SPDX-License-Identifier: BSD-3-Clause
- * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
- */
-
-/* istanbul ignore file */
-// NOTE!
-// This file is being ignored in the test coverage report for now. It reports `0%` functions
-// tested, which brings down the overall coverage and blocks CI. There are tests still, but
-// we don't want it to count toward coverage until we figure out how to cover the `functions`
-// metric for this file in its test.
-
-import React from 'react'
-import loadable from '@loadable/component'
-import {getConfig} from 'pwa-kit-runtime/utils/ssr-config'
-
-// Components
-import {Skeleton} from '@chakra-ui/react'
-import {configureRoutes} from './utils/routes-utils'
-
-const fallback = <Skeleton height="75vh" width="100%" />
-
-// Pages
-const Home = loadable(() => import('./pages/home'), {fallback})
-const Login = loadable(() => import('./pages/login'), {fallback})
-const Registration = loadable(() => import('./pages/registration'), {fallback})
-const ResetPassword = loadable(() => import('./pages/reset-password'), {fallback})
-const Account = loadable(() => import('./pages/account'), {fallback})
-const Cart = loadable(() => import('./pages/cart'), {fallback})
-const Checkout = loadable(() => import('./pages/checkout'), {fallback})
-const CheckoutConfirmation = loadable(() => import('./pages/checkout/confirmation'), {fallback})
-const LoginRedirect = loadable(() => import('./pages/login-redirect'), {fallback})
-const ProductDetail = loadable(() => import('./pages/product-detail'), {fallback})
-const ProductList = loadable(() => import('./pages/product-list'), {fallback})
-const Wishlist = loadable(() => import('./pages/account/wishlist'), {fallback})
-const PageNotFound = loadable(() => import('./pages/page-not-found'))
-
-const routes = [
-    {
-        path: '/',
-        component: Home,
-        exact: true,
-    },
-    {
-        path: '/login',
-        component: Login,
-        exact: true,
-    },
-    {
-        path: '/registration',
-        component: Registration,
-        exact: true,
-    },
-    {
-        path: '/reset-password',
-        component: ResetPassword,
-        exact: true,
-    },
-    {
-        path: '/account',
-        component: Account,
-    },
-    {
-        path: '/checkout',
-        component: Checkout,
-        exact: true,
-    },
-    {
-        path: '/checkout/confirmation',
-        component: CheckoutConfirmation,
-        exact: true,
-    },
-    {
-        path: '/callback',
-        component: LoginRedirect,
-        exact: true,
-    },
-    {
-        path: '/cart',
-        component: Cart,
-        exact: true,
-    },
-    {
-        path: '/product/:productId',
-        component: ProductDetail,
-    },
-    {
-        path: '/search',
-        component: ProductList,
-    },
-    {
-        path: '/category/:categoryId',
-        component: ProductList,
-    },
-    {
-        path: '/account/wishlist',
-        component: Wishlist,
-    },
-    {
-        path: '*',
-        component: PageNotFound,
-    },
-]
-
-export default () => {
-    const config = getConfig()
-    return configureRoutes(routes, config, {
-        ignoredRoutes: ['/callback', '*'],
-    })
-}
